{"version":3,"sources":["utils/setAuthToken.js","redux/actions/authActions.js","redux/actions/types.js","pages/Login.js","pages/SignUp.js","PrivateRoute.js","components/TopAppBar.js","redux/actions/commentActions.js","components/FeedCard.js","components/PostUploadModal.js","redux/actions/postActions.js","components/BottomAppBar.js","pages/Feed.js","pages/Profile.js","components/PostCard.js","pages/Post.js","App.js","serviceWorker.js","redux/reducers/postReducer.js","redux/reducers/commentReducer.js","redux/reducers/authReducer.js","redux/reducers/errorReducer.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","type","payload","logoutUser","dispatch","localStorage","removeItem","document","cookie","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","container","display","alignItems","paper","margin","spacing","flex","avatar","secondary","main","form","width","marginTop","submit","icon","fontFamily","marginBottom","connect","state","auth","errors","loginUser","userData","post","then","res","_res$data","data","userId","concat","setItem","catch","err","response","withRouter","_ref","history","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","userName","setUserName","_React$useState3","_React$useState4","userPassword","setUserPassword","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","e","wrap","_context","prev","next","preventDefault","username","password","stop","this","_x","apply","arguments","isAuthenticated","push","react_default","createElement","Grid","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Typography","variant","onSubmit","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","Button","color","justify","react_router_dom","to","registerUser","newUser","userEmail","setUserEmail","_React$useState5","_React$useState6","userFName","setUserFName","_React$useState7","_React$useState8","email","console","log","Component","rest","objectWithoutProperties","react_router","assign","render","props","toolbarTitle","textAlign","appBar","background","HideOnScroll","children","window","trigger","useScrollTrigger","undefined","Slide","appear","direction","in","TopAppBar","Fragment","AppBar","positio","Toolbar","backButton","Link","style","cursor","onClick","align","noWrap","onLogoutClick","addComment","postId","text","body","mainGrid","justifyContent","card","media","paddingTop","commentInput","border","outline","fontSize","inputBox","padding","comments","onClickPost","comment","setComment","_id","Card","CardActionArea","CardContent","author","Divider","CardMedia","title","caption","moment","createdAt","startOf","fromNow","float","overflow","paddingRight","placeholder","DialogTitle","withStyles","closeButton","position","right","top","onClose","other","disableTypography","IconButton","aria-label","Close_default","DialogContent","MuiDialogContent","posts","newPost","uploadPost","file","formData","FormData","append","content-type","newBasicgram","close","open","_useState","_useState2","setFile","_useState3","_useState4","fileURL","setFileURL","_useState5","_useState6","setCaption","Dialog","aria-labelledby","PostUploadModal_DialogTitle","PostUploadModal_DialogContent","dividers","Input","files","URL","createObjectURL","accept","src","multiline","DialogActions","appBarBottom","bottom","grow","flexGrow","fabButton","zIndex","left","BottomAppBar","setOpen","Container","maxWidth","edge","HomeRounded_default","Fab","Add_default","components_PostUploadModal","PersonRounded_default","fetchAllPosts","get","basicgrams","useEffect","map","components_FeedCard","pathname","alignContent","NameTitle","paddingBottom","userNameTitle","toolbarSecondary","overflowX","toolbarLink","flexShrink","fetchPostsByUserId","user","setUser","cookiename","cookiestring","RegExp","exec","decodeURIComponent","toString","replace","getCook","Axios","GridList","cellHeight","cols","GridListTile","key","cardDetails","cardMedia","commentSection","overflowY","fetchCommentsByPost","Hidden","xsDown","CardActions","infoSection","List","commentPost","ListItem","ListItemText","primary","inline","inputSection","location","components_PostCard","exact","path","Login","SignUp","src_PrivateRoute","Feed","Profile","Post","Boolean","hostname","match","initialState","postReducer","length","action","objectSpread","commentReducer","isEmpty","require","loading","__webpack_require__","d","__webpack_exports__","src_getAllPosts","src_getPostById","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","webSocket","WebSocket","host","split","port","getAllPosts","getPostById","onmessage","message","messageObject","JSON","parse","onerror","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28331ffd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n// Register User\nexport const registerUser = (newUser, history) => dispatch => {\n  axios\n    .post(\"/auth/create-user\", newUser)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/auth/login\", userData)\n    .then(res => {\n      // if ( res.err || res.error || !res.data.valid ) { //\n      //   throw new Error(\"Error logging in\")\n      // }\n      // console.log(res)\n\n      const { token, userId } = res.data;\n      // save as cookie\n      document.cookie = `token=${token}`;\n      document.cookie = `userId=${userId}`;\n      // Save to localStorage\n      // Set token to localStorage\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"userId\", userId);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      // Set current user\n      dispatch(setCurrentUser(token));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = token => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: token\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  // Remove cookies\n  document.cookie = \"userId=\";\n  document.cookie = \"token=\";\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\nexport const FETCH_USER_POSTS_SUCCESS = \"FETCH_USER_POSTS_SUCCESS\";\nexport const POST_COMMENT_SUCCESS = \"POST_COMMENT_SUCCESS\";\nexport const FETCH_COMMENTS_SUCCESS = \"FETCH_COMMENTS_SUCCESS\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const POST_UPLOAD_SUCCESS = \"POST_UPLOAD_SUCCESS\";\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/authActions\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/random/1920x1080)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: theme.palette.grey[50],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        flex: 1,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    icon: {\n        fontFamily: 'Abril Fatface, cursive',\n        marginBottom: theme.spacing(8)\n    }\n}));\n\nconst Login = ({ loginUser, auth, history }) => {\n    const classes = useStyles();\n    const [userName, setUserName] = React.useState(\"\");\n    const [userPassword, setUserPassword] = React.useState(\"\");\n\n    const submit = async (e) => {\n        e.preventDefault();\n        const userData = {\n            username: userName,\n            password: userPassword,\n        };\n        loginUser(userData)\n    }\n\n    if (auth.isAuthenticated) {\n        history.push(\"/feed\");\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={8} className={classes.image} />\n            <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} className={classes.container} square>\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h3\" className={classes.icon}>\n                        basic.\n          </Typography>\n                    <form className={classes.form} onSubmit={submit} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            autoFocus\n                            value={userName}\n                            onChange={e => setUserName(e.target.value)}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={userPassword}\n                            onChange={e => setUserPassword(e.target.value)}\n                        />\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n            </Button>\n                        <Grid container justify=\"flex-start\">\n                            <Grid item>\n                                <Link to=\"/signup\" variant=\"body2\">\n                                    Don't have an account? <b>Sign Up</b>\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(withRouter(Login));","//material UI Stuff\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\n//auth and redux\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../redux/actions/authActions\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/random/1920x1080)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: theme.palette.grey[50],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        flex: 1,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(4),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    icon: {\n        fontFamily: 'Abril Fatface, cursive',\n        marginBottom: theme.spacing(8)\n    }\n}));\n\nconst SignUp = ({ registerUser, history, auth }) => {\n    const classes = useStyles();\n    const [userEmail, setUserEmail] = React.useState(\"\");\n    const [userName, setUserName] = React.useState(\"\");\n    const [userFName, setUserFName] = React.useState(\"\");\n    const [userPassword, setUserPassword] = React.useState(\"\");\n    // const [errors, setErrors] = React.useState({});\n\n    const submit = async (e) => {\n        e.preventDefault();\n        const newUser = {\n            username: userName,\n            password: userPassword,\n            name: userFName,\n            email: userEmail,\n        };\n        console.log(newUser)\n        registerUser(newUser, history)\n    }\n\n    if (auth.isAuthenticated) {\n        history.push(\"/feed\");\n    }\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={8} className={classes.image} />\n            <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} className={classes.container} square>\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h3\" className={classes.icon}>\n                        basic.\n          </Typography>\n                    <form className={classes.form} onSubmit={submit} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"fullName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"fullName\"\n                                    label=\"Full Name\"\n                                    autoFocus\n                                    value={userFName}\n                                    onChange={e => setUserFName(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"userName\"\n                                    label=\"Username\"\n                                    name=\"userName\"\n                                    autoComplete=\"uname\"\n                                    value={userName}\n                                    onChange={e => setUserName(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    value={userEmail}\n                                    onChange={e => setUserEmail(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={userPassword}\n                                    onChange={e => setUserPassword(e.target.value)}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n          </Button>\n                        <Grid container justify=\"flex-start\">\n                            <Grid item>\n                                <Link to=\"/login\" variant=\"body2\">\n                                    Already have an account? <b>Sign in</b>\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\nSignUp.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(SignUp));","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nimport { Link } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  toolbarTitle: {\n    flex: 1,\n    textAlign: 'center',\n    fontFamily: 'Abril Fatface, cursive'\n  },\n  appBar: {\n    background: '#fff',\n    color: '#000'\n  },\n}));\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\n\n\nexport default function TopAppBar(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <HideOnScroll {...props}>\n        <AppBar positio=\"static\" className={classes.appBar} elevation={0}>\n          <Toolbar>\n            {props.backButton ? (\n              <Link style={{ cursor: 'pointer' }} onClick={props.backButton}>Back</Link>\n            ) : ''\n            }\n            <Typography\n              component=\"h1\"\n              variant=\"h4\"\n              color=\"inherit\"\n              align=\"center\"\n              noWrap\n              className={classes.toolbarTitle}\n            >\n              basic.\n          </Typography>\n            <Link style={{ cursor: 'pointer' }} onClick={props.onLogoutClick}>Logout</Link>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    </React.Fragment>\n  );\n}","import axios from 'axios';\nimport {\n    FETCH_COMMENTS_SUCCESS,\n    ADD_COMMENT,\n    GET_ERRORS\n} from './types';\n\nexport const fetchCommentsByPost = (postId) => (dispatch) => {\n    return axios\n        .get(`/basicgrams/comment/post/${postId}`)\n        .then(res => {\n            dispatch({\n                type: FETCH_COMMENTS_SUCCESS,\n                payload: res.data.comments,\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n}\n\nexport const addComment = (postId, text) => (dispatch) => {\n    const body = {\n        text,\n        postId\n    }\n    return axios\n        .post(`/basicgrams/comment/new`, body)\n        .then(res => {\n            console.log('Succesfully added comment')\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Card, CardActionArea, CardContent, CardMedia, CardActions, Divider, Link, Button } from '@material-ui/core'\nimport { addComment } from '../redux/actions/commentActions'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n  mainGrid: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  card: {\n    flex: 1,\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%',\n  },\n  commentInput: {\n    width: '100%',\n    border: 'none',\n    outline: 'none',\n    fontSize: '13px',\n  },\n  inputBox: {\n    padding: theme.spacing(2)\n  },\n}));\n\nconst FeedCard = ({addComment, post, onClickPost }) => {\n  const classes = useStyles();\n  const [comment, setComment] = React.useState(\"\");\n  \n  const submit = async (e) => {\n    e.preventDefault();\n    addComment(post._id, comment).then(() => setComment(''));\n  }\n  return (\n    <Grid item className={classes.mainGrid} xs={12} md={12}>\n      <Card className={classes.card} elevation={3}>\n        <CardActionArea onClick={onClickPost}>\n          <CardContent>\n            <Typography component=\"subtitle1\" variant=\"subtitle1\">\n              <b>{post.author.username}</b>\n            </Typography>\n          </CardContent>\n          <Divider />\n          <CardMedia\n            className={classes.media}\n            image={post.image}\n            title=\"Image title\"\n          />\n          <CardContent>\n            <Typography component=\"subtitle2\" variant=\"subtitle2\">\n              <b>{post.author.username}</b> {post.caption}\n            </Typography>\n            <Typography component=\"p\" variant=\"p\" color=\"textSecondary\">\n              {moment(`${post.createdAt}`).startOf('second').fromNow()}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <Divider />\n        <div className={classes.inputBox}>\n          <form onSubmit={submit}>\n            <button\n              type=\"submit\"\n              style={{ float: 'right', fontSize: '13px' }}\n            >Post</button>\n            <div style={{\n              overflow: 'hidden',\n              paddingRight: '0.5em'\n            }}>\n              <input type=\"text\" placeholder=\"Add a comment\" className={classes.commentInput} value={comment} onChange={e => setComment(e.target.value)} />\n            </div>\n          </form>\n        </div>\n      </Card>\n    </Grid>\n  );\n}\n\nFeedCard.propTypes = {\n  addComment: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  comments: state.comments,\n})\n\nexport default connect(\n  mapStateToProps,\n  { addComment }\n)(FeedCard);","import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, TextField, DialogActions, Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { uploadPost } from '../redux/actions/postActions'\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst PostUploadModal = ({ uploadPost, close, open }) => {\n    const [file, setFile] = useState(null);\n    const [fileURL, setFileURL] = useState('')\n    const [caption, setCaption] = useState('');\n\n    const resetFile = e => {\n        e.preventDefault();\n        setFile(null)\n        setFileURL('')\n    }\n    const onUpload = e => {\n        e.preventDefault();\n        setFile(e.target.files[0])\n        setFileURL(URL.createObjectURL(e.target.files[0]))\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        uploadPost(caption, file).then(() => close())\n    }\n\n    return (\n        <React.Fragment>\n            <Dialog onClose={close} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={close}>\n                    New Post\n        </DialogTitle>\n                <DialogContent dividers>\n                    <div>\n                        <div style={{ display: 'inline' }}>\n                            <Input type=\"file\" onChange={onUpload} accept=\"image/*\" />\n                            {file && (\n                                <Button autoFocus color=\"primary\" style={{ float: 'right' }} onClick={resetFile}>Remove File</Button>\n                            )}\n                        </div>\n                        <img style={{ width: \"100%\" }} src={fileURL} />\n                        <TextField multiline={true} label=\"Add a caption\" style={{ width: '100%', marginTop: '20px' }} onChange={e => setCaption(e.target.value)} />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onSubmit} color=\"primary\">\n                        Upload\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    );\n}\n\n\nPostUploadModal.propTypes = {\n    uploadPost: PropTypes.func.isRequired,\n    close: PropTypes.func.isRequired,\n    open: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    newPost: state.newPost\n})\n\nexport default connect(\n    mapStateToProps,\n    { uploadPost }\n)(PostUploadModal);\n\n// import React from 'react';\n// import { withStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import MuiDialogTitle from '@material-ui/core/DialogTitle';\n// import MuiDialogContent from '@material-ui/core/DialogContent';\n// import MuiDialogActions from '@material-ui/core/DialogActions';\n// import IconButton from '@material-ui/core/IconButton';\n// import CloseIcon from '@material-ui/icons/Close';\n// import Typography from '@material-ui/core/Typography';\n\n// const styles = theme => ({\n//     root: {\n//         margin: 0,\n//         padding: theme.spacing(2),\n//     },\n//     closeButton: {\n//         position: 'absolute',\n//         right: theme.spacing(1),\n//         top: theme.spacing(1),\n//         color: theme.palette.grey[500],\n//     },\n// });\n\n// const DialogTitle = withStyles(styles)(props => {\n//     const { children, classes, onClose, ...other } = props;\n//     return (\n//         <MuiDialogTitle disableTypography className={classes.root} {...other}>\n//             <Typography variant=\"h6\">{children}</Typography>\n//             {onClose ? (\n//                 <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n//                     <CloseIcon />\n//                 </IconButton>\n//             ) : null}\n//         </MuiDialogTitle>\n//     );\n// });\n\n// const DialogContent = withStyles(theme => ({\n//     root: {\n//         padding: theme.spacing(2),\n//     },\n// }))(MuiDialogContent);\n\n// const DialogActions = withStyles(theme => ({\n//     root: {\n//         margin: 0,\n//         padding: theme.spacing(1),\n//     },\n// }))(MuiDialogActions);\n\n// export default function PostUploadModal(props) {\n//     return (\n//         <React.Fragment>\n//             <Dialog onClose={props.close} aria-labelledby=\"customized-dialog-title\" open={props.open}>\n//                 <DialogTitle id=\"customized-dialog-title\" onClose={props.close}>\n//                     New Post\n//         </DialogTitle>\n//                 <DialogContent dividers>\n//                         <form action=\"/basicgrams/new\" method=\"POST\" enctype=\"multipart/form-data\">\n//                             <input type=\"text\" placeholder=\"caption\"\n//                                 minlength=\"1\"\n//                                 maxlength=\"40\" required\n//                                 pattern=\"([A-z 0-9].*[A-z 0-9])\" title=\"Only alphanumeric characters allowed\" />\n//                                 <input type=\"file\" id=\"image\" name=\"image\" accept=\"image/*\" required />\n//                                     <button>Submit</button>\n\n//                 </form>\n//                 </DialogContent>\n//             </Dialog>\n//             </React.Fragment>\n//                 );\n// }","import axios from \"axios\";\nimport {\n    GET_ERRORS,\n    FETCH_POSTS_SUCCESS,\n    FETCH_USER_POSTS_SUCCESS,\n    POST_UPLOAD_SUCCESS\n} from \"./types\";\n\n\nexport const uploadPost = (caption, file) => (dispatch) => {\n    let formData = new FormData();\n    formData.append('image', file);\n    formData.append('caption', caption);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    return axios\n    .post('/basicgrams/new', formData, config)\n    .then(res => {\n      dispatch({\n        type: POST_UPLOAD_SUCCESS,\n        payload: res.newBasicgram,\n      });\n    })\n    .catch(err => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    });\n  }\n\nexport const fetchAllPosts = () => (dispatch) => {\n    return axios\n        .get('/basicgrams')\n        .then(res => {\n            console.log('successfully fetched posts', res.data);\n            dispatch({\n                type: FETCH_POSTS_SUCCESS,\n                payload: res.data.basicgrams,\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const fetchPostsByUserId = (userId) => (dispatch) => {\n    return axios\n        .get(`/basicgrams/user/${userId}`)\n        .then(res => {\n            dispatch({\n                type: FETCH_USER_POSTS_SUCCESS,\n                payload: res.data.basicgrams,\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Toolbar, IconButton,  AppBar, Container, Fab } from '@material-ui/core'\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PostUploadModal from './PostUploadModal';\n\nconst useStyles = makeStyles(theme => ({\n    appBarBottom: {\n        background: '#fff',\n        color: '#000',\n        top: 'auto',\n        bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function BottomAppBar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  \n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n                <Container maxWidth=\"sm\">\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\">\n                            <HomeRoundedIcon />\n                        </IconButton>\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fabButton} onClick={handleClickOpen} >\n                            <AddIcon />\n                        </Fab>\n                        {open ? <PostUploadModal open={open} close={handleClose} /> : null}\n                        <div className={classes.grow} />\n                        <IconButton edge=\"end\" color=\"inherit\">\n                            <PersonRoundedIcon/>\n                        </IconButton>\n                    </Toolbar>\n                </Container>\n            </AppBar>\n    </React.Fragment>\n  );\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container } from '@material-ui/core'\nimport { logoutUser } from '../redux/actions/authActions';\nimport { fetchAllPosts } from '../redux/actions/postActions';\n\nimport TopAppBar from '../components/TopAppBar';\nimport FeedCard from '../components/FeedCard';\nimport BottomAppBar from \"../components/BottomAppBar\";\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10),\n    },\n}));\n\n// Courtesy of stack over flow :D\nconst getCook = (cookiename) => {\n    // Get name followed by anything except a semicolon\n    let cookiestring = RegExp(\"\" + cookiename + \"[^;]+\").exec(document.cookie);\n    // Return everything after the equal sign, or an empty string if the cookie name not found\n    return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n}\n\nconst Feed = ({ logoutUser, history, fetchAllPosts, posts }) => {\n    const classes = useStyles();\n    \n    React.useEffect(() => {\n        fetchAllPosts();\n    }, [fetchAllPosts]);\n\n    const onLogoutClick = e => {\n        e.preventDefault();\n        logoutUser();\n    } \n\n    console.log(posts.posts)\n\n    return (\n        <React.Fragment>\n            <TopAppBar onLogoutClick={onLogoutClick} />\n            <Container className={classes.container} maxWidth=\"sm\">\n                {/* posts */}\n                <Grid container spacing={3}>\n                    {posts.posts ? (posts.posts.map(post => (\n                        <FeedCard post={post} onClickPost={() => history.push({\n                            pathname: `/feed/post/${post._id}`,\n                            state: { post: post }\n                          })} />\n                    ))) : <h1>No Posts Available</h1>}\n                </Grid>\n                {/* End sub featured posts */}\n            </Container>\n            <BottomAppBar />\n        </React.Fragment>\n    );\n}\n\nFeed.propTypes = {\n    fetchAllPosts: PropTypes.func.isRequired,\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    posts: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    posts: state.posts,\n});\nexport default connect(\n    mapStateToProps,\n    { logoutUser, fetchAllPosts }\n)(Feed);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport '../App.css'\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TopAppBar from '../components/TopAppBar'\nimport Typography from '@material-ui/core/Typography';\nimport { fetchPostsByUserId } from '../redux/actions/postActions';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Container from '@material-ui/core/Container';\nimport { logoutUser } from '../redux/actions/authActions';\nimport BottomAppBar from '../components/BottomAppBar';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles(theme => ({\n    // toolbar: {\n    //     borderBottom: `1px solid ${theme.palette.divider}`,\n    // },\n    toolbarTitle: {\n        flex: 1,\n        alignContent: 'center',\n        fontFamily: 'Abril Fatface, cursive'\n    },\n    NameTitle: {\n        flex: 1,\n        paddingBottom: '3rem',\n        alignContent: 'center',\n        fontFamily: '-apple-system, system-ui, \"Segoe UI\"',\n    },\n    userNameTitle: {\n        flex: 1,\n        paddingTop: '2rem',\n        paddingBottom: '0.5rem',\n        alignContent: 'center',\n        fontFamily: '-apple-system, system-ui, \"Segoe UI\"',\n    },\n    toolbarSecondary: {\n        justifyContent: 'space-between',\n        overflowX: 'auto',\n    },\n    toolbarLink: {\n        padding: theme.spacing(1),\n        flexShrink: 0,\n    },\n    mainGrid: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    container: {\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10),\n    },\n    card: {\n        // display: 'flex',\n        flex: 1,\n    },\n    media: {\n        height: 0,\n        paddingTop: '100%',\n    },\n    appBar: {\n        background: '#fff',\n        color: '#000'\n    },\n    appBarBottom: {\n        background: '#fff',\n        color: '#000',\n        top: 'auto',\n        bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n    commentInput: {\n        width: '100%',\n        border: 'none',\n        outline: 'none',\n        fontSize: '13px',\n    },\n    inputBox: {\n        padding: theme.spacing(2)\n    },\n}));\n\nconst Profile = ({logoutUser, history, posts, fetchPostsByUserId}) => {\n\n    const classes = useStyles();\n    const [user, setUser] = React.useState('');\n\n    // Courtesy of stack over flow :D\n    const getCook = (cookiename) => {\n        // Get name followed by anything except a semicolon\n        let cookiestring = RegExp(\"\" + cookiename + \"[^;]+\").exec(document.cookie);\n        // Return everything after the equal sign, or an empty string if the cookie name not found\n        return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n    }\n\n    // 1) retrieve userId by calling the getCook function\n    // 2) axios call to retrieve username and full name\n    // 3) store them in the user state\n    // 4) fetch all the posts made by the user\n    React.useEffect(() => {\n        const userId = getCook('userId')\n        Axios.get(`/user/${userId}`)\n            .then(res=>{setUser(res.data.user)})\n            .catch(err=>{console.log(err)})\n        fetchPostsByUserId(userId);\n    }, []);\n\n    // 1) logs out f the given account\n    const onLogoutClick = e => {\n        e.preventDefault();\n        logoutUser();\n    }\n\n    return(\n        <React.Fragment>\n            {/* Essentially modified TopAppBar for profile page*/}\n            <TopAppBar onLogoutClick={onLogoutClick}/>\n            <Container className={classes.container} maxWidth=\"md\">\n                <Typography\n                    component=\"h2\"\n                    variant=\"subtitle\"\n                    align=\"center\"\n                    noWrap\n                    className={classes.userNameTitle}\n                >\n                    {user.username}\n                </Typography>\n                <Typography\n                    component=\"h5\"\n                    align=\"center\"\n                    noWrap\n                    className={classes.NameTitle}\n                >\n                    {user.name}\n                </Typography>\n                <GridList cellHeight={300} cols={3} spacing={20}>\n                    {posts.posts ? (posts.posts.map(post => (\n                        <GridListTile \n                            key={post._id} \n                            post={post} \n                            className='tileStyle'\n                            onClick={() => history.push({\n                                pathname: `/feed/post/${post._id}`,\n                                state: { post: post }\n                            })}\n                        >\n                            <img src={post.image} />\n                        </GridListTile>\n                    ))) : <h1>No Posts Available</h1>}\n                </GridList>                                   \n            </Container>\n            <BottomAppBar/>\n        </React.Fragment>\n    );\n}\n\nProfile.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    fetchPostsByUserId: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    posts: state.posts\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser, fetchPostsByUserId }\n)(Profile);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider, CardActions, Link, Card, Hidden, CardMedia, Typography, Grid, List, ListItem, ListItemText, Button } from '@material-ui/core'\nimport { fetchCommentsByPost, addComment } from '../redux/actions/commentActions'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        height: '75vh'\n    },\n    cardDetails: {\n        flex: 2,\n    },\n    cardMedia: {\n        flex: 3.5,\n    },\n    mainGrid: {\n        marginTop: theme.spacing(10),\n    },\n    root: {\n        width: '100%',\n    },\n    commentSection: {\n        height: '65vh',\n        overflowY: 'auto'\n    },\n    commentInput: {\n        width: '100%',\n        border: 'none',\n        outline: 'none',\n        fontSize: '13px',\n    },\n}));\n\nconst PostCard = ({ fetchCommentsByPost, addComment, comments, post }) => {\n    const [comment, setComment] = React.useState(\"\");\n    const classes = useStyles();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        addComment(post._id, comment).then(() => setComment(''));\n    }\n\n    React.useEffect(() => {\n        fetchCommentsByPost(post._id);\n    }, [fetchCommentsByPost]);\n\n    return (\n        <Grid className={classes.mainGrid}>\n            <Grid item sm={12} md={12}>\n                <Card className={classes.card} elevation={3}>\n                    <Hidden xsDown>\n                        <CardMedia className={classes.cardMedia} image={post.image} />\n                    </Hidden>\n                    <div className={classes.cardDetails}>\n                        <CardActions className={classes.infoSection}>\n                            <Typography component=\"subtitle1\" variant=\"subtitle1\">\n                                <b>{post.author.username}</b>\n                            </Typography>\n                        </CardActions>\n                        <Divider />\n                        <div className={classes.commentSection}>\n                            <List className={classes.root}>\n                                {comments.comments.map(commentPost => {\n                                    return <ListItem>\n                                     <ListItemText\n                                        primary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textPrimary\"\n                                                >\n                                                    <b>{commentPost.author.username}</b> {commentPost.text}\n                                                </Typography>\n                                            </React.Fragment>\n                                        }\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textSecondary\"\n                                                >\n                                                    {moment(`${commentPost.createdAt}`).startOf('second').fromNow()}\n                                                </Typography>\n                                            </React.Fragment>\n                                            \n                                        }\n                                    />\n                                    </ListItem>\n                                })\n                                }\n                            </List>\n                        </div>\n                        <Divider />\n                        <CardActions className={classes.inputSection}>\n                            <form onSubmit={submit} style={{ width: '100%' }}>\n                                <button\n                                    type=\"submit\"\n                                    style={{ float: 'right', fontSize: '13px' }}\n                                >Post</button>\n                                <div style={{\n                                    overflow: 'hidden',\n                                    paddingRight: '0.5em'\n                                }}>\n                                    <input type=\"text\" placeholder=\"Add a comment\" className={classes.commentInput} value={comment} onChange={e => setComment(e.target.value)} />\n                                </div>\n                            </form>\n                        </CardActions>\n                    </div>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nPostCard.propTypes = {\n    fetchCommentsByPost: PropTypes.func.isRequired,\n    addComment: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    comments: state.comments\n})\n\n\nexport default connect(\n    mapStateToProps,\n    { fetchCommentsByPost, addComment }\n)(PostCard);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Container} from '@material-ui/core'\nimport { logoutUser } from '../redux/actions/authActions';\n\nimport TopAppBar from '../components/TopAppBar';\nimport BottomAppBar from \"../components/BottomAppBar\";\nimport PostCard from \"../components/PostCard\";\n\nconst Post = ({ logoutUser, history, location }) => {\n\n    const onLogoutClick = e => {\n        e.preventDefault();\n        logoutUser();\n    }\n\n    const backButton = e => {\n        e.preventDefault();\n        history.push('/feed')\n    }\n    return (\n        <React.Fragment>\n            <TopAppBar onLogoutClick={onLogoutClick} backButton={backButton} />\n            <Container maxWidth=\"md\">\n                <main>\n                    <PostCard post={location.state.post} />\n                </main>\n            </Container>\n            <BottomAppBar />\n        </React.Fragment>\n    );\n}\n\nPost.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Post);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport setAuthToken from './utils/setAuthToken';\nimport {setCurrentUser} from './redux/actions/authActions';\nimport PrivateRoute from './PrivateRoute';\nimport Feed from './pages/Feed';\nimport Profile from './pages/Profile'\nimport Post from './pages/Post';\n\n\nconst App = ({ dispatch }) => {\n  if (localStorage.token){\n    const token = localStorage.token;\n    setAuthToken(token);\n    dispatch(setCurrentUser(token))\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} /> \n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={SignUp} />\n        <PrivateRoute exact path=\"/feed\" component={Feed} />\n        <PrivateRoute exact path=\"/profile\" component={Profile} />\n        <Route path=\"/feed/post\" component={Post} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // messages: state.messageReducer.messages,\n    // text: state.messageReducer.text,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    FETCH_POSTS_SUCCESS,\n    FETCH_USER_POSTS_SUCCESS,\n    POST_UPLOAD_SUCCESS\n} from \"../actions/types\";\n\nconst initialState = {\n    posts: [],\n    newPost: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_POSTS_SUCCESS:\n            return {\n                ...state,\n                posts: action.payload\n            };\n        case FETCH_USER_POSTS_SUCCESS:\n            return {\n                ...state,\n                posts: action.payload\n            };\n            case POST_UPLOAD_SUCCESS:\n                return {\n                    ...state,\n                    newPost: action.payload\n                };\n        default:\n            return state;\n    }\n}","import {\n    FETCH_COMMENTS_SUCCESS,\n    ADD_COMMENT\n} from \"../actions/types\";\n\nconst initialState = {\n    comments: [],\n};\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case FETCH_COMMENTS_SUCCESS:\n            return {\n                ...state,\n                comments: action.payload\n            };\n        case ADD_COMMENT:\n            return {\n                ...state,\n            };\n        default:\n            return state;\n    }\n}","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n  } from \"../actions/types\";\n\n  const isEmpty = require(\"is-empty\");\n  \n  const initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n  };\n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return {\n          ...state,\n          isAuthenticated: !isEmpty(action.payload),\n          user: action.payload\n        };\n      case USER_LOADING:\n        return {\n          ...state,\n          loading: true\n        };\n      default:\n        return state;\n    }\n  }","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport postReducer from './redux/reducers/postReducer'\nimport commentReducer from './redux/reducers/commentReducer'\nimport authReducer from './redux/reducers/authReducer';\nimport errorReducer from './redux/reducers/errorReducer';\n\n\nconst rootReducer = combineReducers({\n  posts: postReducer,\n  auth: authReducer,\n  errors: errorReducer,\n  comment: commentReducer,\n  comments: commentReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst webSocket = new WebSocket('ws://' + window.location.host.split(':')[0] + (window.location.port && `:${window.location.port}`) + '/websocket');\n\n\nexport const getAllPosts = (state) => {\n  return postReducer.getAllPosts(state.posts);\n};\n\nexport const getPostById = (state, id) => {\n  return postReducer.getPostById(state.posts, id);\n};\n\nwebSocket.onmessage = (message) => {\n  const messageObject = JSON.parse(message.data);\n  console.log(messageObject);\n  switch(messageObject.type) {\n    case 'UPDATE_FEED':\n      // TODO: UPDATE FEED... make an axios request or something\n      console.log('UPDATE FEED');\n      break;\n    case 'UPDATE_COMMENT':\n      // TODO: UPDATE COMMENT... make an axios request or something\n      console.log('UPDATE COMMENT', messageObject.postId);\n      break;\n    default:\n      console.log('Unexpected message.');\n  }\n};\n\nwebSocket.onerror = e => {\n  console.log(e);\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n    <App />\n    </Router>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}